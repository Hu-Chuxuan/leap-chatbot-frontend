{"ast":null,"code":"var _jsxFileName = \"/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport KeyModal from './KeyModal';\nimport \"react-chat-elements/dist/main.css\";\nimport { MessageBox, Input } from \"react-chat-elements\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Comment } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', function () {\n  fetch('/delete-files', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => console.log('Success:', data)).catch(error => {\n    console.error('Error:', error);\n  });\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  // const [description, setDescription] = useState(''); \n  const [descriptions, setDescriptions] = useState({});\n  const [extractedSentences, setExtractedSentences] = useState([]);\n  const [query, setQuery] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n  const [file, setFile] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filePaths, setFilePaths] = useState({\n    result: '',\n    augmentedTable: ''\n  });\n  const [timestamp, setTimestamp] = useState('');\n  const [dataheader, setDataheader] = useState([]);\n  useEffect(() => {\n    // Automatically open the modal when the page loads\n    setIsModalOpen(true);\n  }, []);\n  const handleKeySubmit = async (apikey, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n      const response = await fetch('http://127.0.0.1:5000/process_key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apikey,\n          org\n        })\n      });\n      const data = await response.json();\n      setIsModalOpen(false); // Close the modal after submitting\n    } catch (error) {\n      console.error('Error submitting password:', error);\n    }\n  };\n  const handleCopyToClipboard = sentence => {\n    navigator.clipboard.writeText(sentence).then(() => {\n      console.log('Sentence copied to clipboard:', sentence);\n    }).catch(error => {\n      console.error('Error copying sentence to clipboard:', error);\n    });\n  };\n  const handleDescriptionChange = (header, value) => {\n    setDescriptions(prev => ({\n      ...prev,\n      [header]: value\n    }));\n  };\n  const handleFileChange = event => {\n    const f = event.target.files[0];\n    setFile(f); // Update the state if needed elsewhere in your component\n    handleUpload(f); // Pass file directly\n  };\n  const handleUpload = f => {\n    // alert('Please select a file first!');\n    if (!f) {\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', f);\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData\n    }).then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok.');\n    }).then(data => {\n      setDataheader(data.headers); // Update the state with the headers\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n    const initialDescriptions = {};\n    dataheader.forEach(header => {\n      initialDescriptions[header] = ''; // Initialize each header's description as an empty string\n    });\n    setDescriptions(initialDescriptions);\n  };\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true);\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  const handleHover = event => {\n    event.target.style.color = 'white'; // Change text color on hover\n    event.target.style.borderColor = 'white'; // Change border color on hover\n  };\n  const handleHoverOut = event => {\n    event.target.style.color = ''; // Reset text color when hover ends\n    event.target.style.borderColor = ''; // Reset border color when hover ends\n  };\n  const handleSendMessage = message => {\n    const payload = {\n      message,\n      // the message text from the input\n      description // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data === \"start\") {\n          setIsLoading(true);\n        } else if (data === \"complete\") {\n          setIsLoading(false);\n        } else if (data.startsWith(\"VER NUMBER:\")) {\n          const ver = data.slice(\"VER NUMBER:\".length).trim();\n          setTimestamp(ver);\n          setIsLoading(false);\n        } else {\n          if (data.startsWith(\"########## Feedback: \")) {\n            const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n            const pattern = /\\*\\*(.*?)\\*\\*/g;\n            const matches = remainingMessage.match(pattern);\n            if (matches) {\n              const extractedSentences = matches.map(match => match.slice(2, -2));\n              const replacedMessage = remainingMessage.replace(pattern, match => match.replace(/\\*\\*/g, \"'\"));\n              setMessages(prev => [...prev, {\n                text: replacedMessage,\n                type: \"text\",\n                from: 'bot'\n              }]);\n              setExtractedSentences(extractedSentences);\n            } else {\n              setMessages(prev => [...prev, {\n                text: remainingMessage,\n                type: \"text\",\n                from: 'bot'\n              }]);\n            }\n          } else {\n            if (data === \"Succeed!\") {\n              setFilePaths({\n                result: \"./uploads/result.csv\",\n                augmentedTable: \"./uploads/augmented_table.csv\"\n              });\n              setMessages(prev => [...prev, {\n                text: \"Result\",\n                type: \"file\",\n                version: timestamp,\n                from: 'bot'\n              }]);\n              setMessages(prev => [...prev, {\n                text: \"Augmented Table\",\n                type: \"file\",\n                version: timestamp,\n                from: 'bot'\n              }]);\n            }\n            setBackendOutputs(prev => [...prev, data]);\n          }\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    }).catch(error => console.error('Error:', error));\n    setMessages(prev => [...prev, {\n      text: message,\n      type: \"text\",\n      from: 'user'\n    }]);\n    // setDescription('');\n  };\n  function handleDownload(text, timestamp) {\n    const uri = text === \"Result\" ? './uploads/result' + String(timestamp) + '.csv' : './uploads/augmented_table' + String(timestamp) + '.csv';\n    fetch(uri).then(response => response.blob()).then(blob => {\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = uri.split('/').pop(); // Assuming the filename is the last part of the URI\n      document.body.appendChild(a);\n      a.click();\n      a.remove();\n    }).catch(e => console.error('Download failed:', e));\n  }\n  const handleDeleteFiles = async () => {\n    try {\n      const response = await fetch('/delete-dot-graph', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to delete files');\n      }\n      const result = await response.json();\n      console.log(result.message); // Display the server response message\n    } catch (error) {\n      console.error('Error deleting files:', error);\n    }\n  };\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleDeleteFiles();\n      // handleUpload();\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n      // setFilePaths({result: \"\", augmentedTable: \"\"});\n      setQuery('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(KeyModal, {\n      isOpen: isModalOpen,\n      onSubmit: handleKeySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.from === 'user' ? 'right' : 'left'\n              },\n              children: msg.from === 'user' ? /*#__PURE__*/_jsxDEV(MessageBox, {\n                position: \"right\",\n                type: \"text\",\n                text: msg.text\n                // date={new Date()}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 13\n              }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n                position: \"left\"\n                // type='text'\n                ,\n                type: msg.type,\n                title: \"LEAP\",\n                text: msg.text\n                // date={new Date()}\n                ,\n                data: {\n                  uri: filePaths.augmentedTable,\n                  status: {\n                    click: false,\n                    loading: 0\n                  }\n                },\n                onClick: msg.type === 'file' ? () => handleDownload(msg.text, timestamp) : () => {}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 13\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extracted-section\",\n            children: extractedSentences && extractedSentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '70%',\n                fontSize: '15px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginBottom: '10px',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              onClick: () => {\n                handleCopyToClipboard(sentence);\n                setQuery(sentence);\n                setExtractedSentences([]);\n              },\n              onMouseEnter: handleHover // Change color on hover\n              ,\n              onMouseLeave: handleHoverOut // Reset color when hover ends\n              ,\n              children: sentence\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50%',\n              fontSize: '15px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              gap: '20px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"file-input-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileChange,\n                  accept: \".csv\",\n                  style: {\n                    display: 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-input-button\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faUpload\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 332,\n                    columnNumber: 19\n                  }, this), \" Upload Data\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: dataheader.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"Type Data Descriptions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: dataheader.map((header, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"list-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"header\",\n                      children: header\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 343,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"input-container\",\n                      children: /*#__PURE__*/_jsxDEV(Input, {\n                        type: \"text\",\n                        value: descriptions[header] || '',\n                        onChange: e => handleDescriptionChange(header, e.target.value)\n                        // placeholder=\"Type column description...\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 35\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 344,\n                      columnNumber: 29\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '15px',\n              marginBottom: '10px'\n            },\n            children: [\"Uploaded File: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50%',\n              maxWidth: '800px',\n              margin: '0 auto'\n            },\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Comment, {\n              visible: true,\n              height: \"80\",\n              width: \"80\",\n              ariaLabel: \"comment-loading\",\n              wrapperStyle: {},\n              wrapperClass: \"comment-wrapper\",\n              color: \"#fff\",\n              backgroundColor: \"grey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 12\n            }, this) : /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: query,\n              onKeyDown: handleMessageInput,\n              onChange: e => setQuery(e.target.value),\n              placeholder: \"Type query...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"LEAP Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"Dynamic from backend\",\n              onError: e => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subtitle\",\n              children: \"Column Mapping Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: backendOutputs.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: output\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"V++G51eU5ELkZe3bNzFIMUI3Gcg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","KeyModal","MessageBox","Input","FontAwesomeIcon","faUpload","Comment","jsxDEV","_jsxDEV","Fragment","_Fragment","document","addEventListener","fetch","method","headers","then","response","json","data","console","log","catch","error","App","_s","messages","setMessages","backendOutputs","setBackendOutputs","descriptions","setDescriptions","extractedSentences","setExtractedSentences","query","setQuery","imageUrl","setImageUrl","showImage","setShowImage","file","setFile","isModalOpen","setIsModalOpen","isLoading","setIsLoading","filePaths","setFilePaths","result","augmentedTable","timestamp","setTimestamp","dataheader","setDataheader","handleKeySubmit","apikey","org","body","JSON","stringify","handleCopyToClipboard","sentence","navigator","clipboard","writeText","handleDescriptionChange","header","value","prev","handleFileChange","event","f","target","files","handleUpload","formData","FormData","append","ok","Error","initialDescriptions","forEach","interval","setInterval","Date","getTime","clearInterval","handleHover","style","color","borderColor","handleHoverOut","handleSendMessage","message","payload","description","eventSource","EventSource","onmessage","trim","startsWith","ver","slice","length","remainingMessage","pattern","matches","match","map","replacedMessage","replace","text","type","from","version","onerror","close","handleDownload","uri","String","blob","url","window","URL","createObjectURL","a","createElement","href","download","split","pop","appendChild","click","remove","e","handleDeleteFiles","handleMessageInput","key","className","children","isOpen","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","textAlign","position","title","status","loading","onClick","width","fontSize","marginLeft","marginRight","marginBottom","border","padding","onMouseEnter","onMouseLeave","display","justifyContent","alignItems","gap","onChange","accept","icon","name","maxWidth","margin","visible","height","ariaLabel","wrapperStyle","wrapperClass","backgroundColor","onKeyDown","placeholder","src","alt","onError","output","_c","$RefreshReg$"],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["import React, { useState,  useEffect } from 'react';\nimport './App.css';\nimport KeyModal from './KeyModal';\n\nimport \"react-chat-elements/dist/main.css\"\nimport { MessageBox, Input } from \"react-chat-elements\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Comment } from 'react-loader-spinner';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  fetch('/delete-files', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      }\n  })\n  .then(response => response.json())\n  .then(data => console.log('Success:', data))\n  .catch((error) => {\n      console.error('Error:', error);\n  });\n});\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  // const [description, setDescription] = useState(''); \n  const [descriptions, setDescriptions] = useState({});\n\n  const [extractedSentences, setExtractedSentences] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n\n  const [file, setFile] = useState(null);\n\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [filePaths, setFilePaths] = useState({result: '', augmentedTable: ''});\n  const [timestamp, setTimestamp] = useState('');\n\n  const [dataheader, setDataheader] = useState([]);\n\n  useEffect(() => {\n      // Automatically open the modal when the page loads\n      setIsModalOpen(true);\n  }, []);\n\n  const handleKeySubmit = async (apikey, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n        const response = await fetch('http://127.0.0.1:5000/process_key', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ apikey, org }),\n        });\n        const data = await response.json();\n        setIsModalOpen(false); // Close the modal after submitting\n\n    } catch (error) {\n        console.error('Error submitting password:', error);\n    }\n};\n\n  const handleCopyToClipboard = (sentence) => {\n    navigator.clipboard.writeText(sentence)\n      .then(() => {\n        console.log('Sentence copied to clipboard:', sentence);\n      })\n      .catch((error) => {\n        console.error('Error copying sentence to clipboard:', error);\n      });\n  };\n\n\n  const handleDescriptionChange = (header, value) => {\n    setDescriptions(prev => ({\n        ...prev,\n        [header]: value\n    }));\n  };\n\n  const handleFileChange = (event) => {\n    const f = event.target.files[0];\n    setFile(f);  // Update the state if needed elsewhere in your component\n    handleUpload(f);  // Pass file directly\n  };\n  \n  const handleUpload = (f) => {\n    // alert('Please select a file first!');\n    if (!f) {\n      return;\n    }\n  \n    const formData = new FormData();\n    formData.append('file', f);\n  \n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData,\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json();\n      }\n      throw new Error('Network response was not ok.');\n    })\n    .then(data => {\n      setDataheader(data.headers);  // Update the state with the headers\n    })\n    .catch(error => {\n      console.error('Error:', error);\n    });\n\n    const initialDescriptions = {};\n        dataheader.forEach(header => {\n            initialDescriptions[header] = '';  // Initialize each header's description as an empty string\n        });\n    setDescriptions(initialDescriptions);\n  };\n\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true); \n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  const handleHover = (event) => {\n    event.target.style.color = 'white'; // Change text color on hover\n    event.target.style.borderColor = 'white'; // Change border color on hover\n  };\n\n  const handleHoverOut = (event) => {\n    event.target.style.color = ''; // Reset text color when hover ends\n    event.target.style.borderColor = ''; // Reset border color when hover ends\n  };\n\n  const handleSendMessage = (message) => {\n    const payload = {\n      message,  // the message text from the input\n      description  // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    })\n\n    .then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data === \"start\") {\n          setIsLoading(true);\n        }\n        else if (data === \"complete\") {\n          setIsLoading(false);\n        }\n        else if (data.startsWith(\"VER NUMBER:\")) {\n          const ver=data.slice(\"VER NUMBER:\".length).trim();\n          setTimestamp(ver);\n          setIsLoading(false);\n        }\n        else{          \n          if (data.startsWith(\"########## Feedback: \")) {\n            const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n            const pattern = /\\*\\*(.*?)\\*\\*/g;\n            const matches = remainingMessage.match(pattern);\n            if (matches) {\n              const extractedSentences = matches.map(match => match.slice(2, -2));\n              const replacedMessage = remainingMessage.replace(pattern, match => match.replace(/\\*\\*/g, \"'\"));\n              setMessages(prev => [...prev, { text: replacedMessage, type: \"text\", from: 'bot' }]);\n              setExtractedSentences(extractedSentences);\n            } else {\n              setMessages(prev => [...prev, { text: remainingMessage, type: \"text\", from: 'bot' }]);\n            }\n          } else {\n            if (data === \"Succeed!\") {\n              setFilePaths({result: \"./uploads/result.csv\", augmentedTable: \"./uploads/augmented_table.csv\"});\n              setMessages(prev => [...prev, { text: \"Result\", type: \"file\", version: timestamp, from: 'bot' }]);\n              setMessages(prev => [...prev, { text: \"Augmented Table\", type: \"file\", version: timestamp, from: 'bot' }]);\n            }\n            setBackendOutputs(prev => [...prev, data]);\n          }\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    })\n    \n    .catch(error => console.error('Error:', error));\n\n    setMessages(prev => [...prev, { text: message, type: \"text\", from: 'user' }]);\n    // setDescription('');\n  };\n\n  function handleDownload(text,timestamp) {\n    const uri = text === \"Result\" ? './uploads/result'+String(timestamp)+'.csv' : './uploads/augmented_table'+String(timestamp)+'.csv';\n    fetch(uri)\n      .then(response => response.blob())\n      .then(blob => {\n        const url = window.URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = uri.split('/').pop(); // Assuming the filename is the last part of the URI\n        document.body.appendChild(a);\n        a.click();\n        a.remove();\n      })\n      .catch(e => console.error('Download failed:', e));\n  }\n\n  const handleDeleteFiles = async () => {\n    try {\n        const response = await fetch('/delete-dot-graph', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n\n        if (!response.ok) {\n            throw new Error('Failed to delete files');\n        }\n        const result = await response.json();\n        console.log(result.message); // Display the server response message\n    } catch (error) {\n        console.error('Error deleting files:', error);\n    }\n};\n\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleDeleteFiles();\n      // handleUpload();\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n      // setFilePaths({result: \"\", augmentedTable: \"\"});\n      setQuery('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <KeyModal isOpen={isModalOpen} onSubmit={handleKeySubmit} /> \n      <div className=\"grid-container\">\n        <div className=\"chat-section\">\n          <header className=\"App-header\">\n            {/* <ul>\n              {messages.map((msg, index) => (\n                <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n                  {msg.text}\n                </li>\n              ))}\n            </ul> */}\n                  <ul>\n        {messages.map((msg, index) => (\n          <div key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' } }>\n          {msg.from === 'user' ? (\n            <MessageBox\n              position='right'\n              type='text'\n              text={msg.text}\n              // date={new Date()}\n            />\n          ) : (\n            <MessageBox\n              position='left'\n              // type='text'\n              type={msg.type}\n              title=\"LEAP\"\n              text={msg.text}\n              // date={new Date()}\n              data={{\n                uri: filePaths.augmentedTable,\n                status: {\n                  click: false,\n                  loading: 0,\n                },\n              }}\n              onClick={msg.type === 'file' ? () => handleDownload(msg.text, timestamp) : () => {}}\n            />\n          \n          )}\n          </div>\n        ))}\n      </ul>\n            <div className=\"extracted-section\">\n              {extractedSentences && extractedSentences.map((sentence, index) => (\n                <div key={index} \n                style={{ width: '70%', fontSize: '15px', marginLeft: 'auto', marginRight: 'auto', marginBottom: '10px', border: '1px solid #ccc', padding: '5px' }}\n                onClick={() => {\n                  handleCopyToClipboard(sentence);\n                  setQuery(sentence);\n                  setExtractedSentences([]);\n                }}\n                onMouseEnter={handleHover} // Change color on hover\n                onMouseLeave={handleHoverOut} // Reset color when hover ends\n                >\n                  {sentence}\n                </div>\n              ))}\n            </div>\n            <div style={{  width: '50%', fontSize: '15px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '20px' , marginBottom: '10px'}}>\n            <div>\n              <label className=\"file-input-label\">\n                <input\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  accept=\".csv\"\n                  style={{ display: 'none' }}\n                />\n                <span className=\"file-input-button\">\n                  <FontAwesomeIcon icon={faUpload} /> Upload Data\n                </span>\n              </label>\n            </div>\n            <div>\n            {dataheader.length > 0 && (\n                <>\n                    <h3>Type Data Descriptions:</h3>\n                    <ul>\n                        {dataheader.map((header, index) => (\n                            <div key={index} className=\"list-item\">\n                            <span className=\"header\">{header}</span>\n                            <div className=\"input-container\">\n                                  <Input\n                                    type=\"text\"\n                                    value={descriptions[header] || ''}\n                                    onChange={(e) => handleDescriptionChange(header, e.target.value)}\n                                    // placeholder=\"Type column description...\"\n                                  />\n                                </div>\n                            </div>\n                        ))}\n                    </ul>\n                </>\n            )}\n        </div>\n            {/* <h3>Data descriptions:</h3>\n      <ul>\n        {dataheader.map((header, index) => (\n          <li key={index}>{header}</li>\n        //   <Input\n        //   type=\"text\"\n        //   value={description}\n        //   onChange={handleDescriptionChange}\n        //   placeholder=\"Type data description...\"\n        // />\n        ))}\n      </ul>\n            <div style={{ width: '50%', maxWidth: '800px' }}>\n              <Input\n                type=\"text\"\n                value={description}\n                onChange={handleDescriptionChange}\n                placeholder=\"Type data description...\"\n              />\n            </div> */}\n          </div>\n          {file && (\n                <div style={{ fontSize: '15px', marginBottom: '10px'}}>\n                  Uploaded File: {file.name}\n                </div>\n              )}\n            <div style={{ width: '50%', maxWidth: '800px', margin: '0 auto' }}>\n             { isLoading ? (\n           <Comment\n           visible={true}\n           height=\"80\"\n           width=\"80\"\n           ariaLabel=\"comment-loading\"\n           wrapperStyle={{}}\n           wrapperClass=\"comment-wrapper\"\n           color=\"#fff\"\n           backgroundColor=\"grey\"\n           />\n             ) : (<Input type=\"text\" value={query} onKeyDown={handleMessageInput} onChange={(e) => setQuery(e.target.value)} placeholder=\"Type query...\" />)\n             }\n            </div>\n          </header>\n        </div>\n        <div className=\"output-section\">\n          <h2>LEAP Output:</h2>\n          <div>\n          {showImage && (\n            <div>\n              <img src={imageUrl} alt=\"Dynamic from backend\" onError={(e) => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }} />\n              <div className=\"subtitle\">Column Mapping Relationship</div>\n            </div>\n          )}\n          </div>\n          <pre>\n            {backendOutputs.map((output, index) => (\n              <div key={index}>{output}</div>\n            ))}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
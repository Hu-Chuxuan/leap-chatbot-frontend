{"ast":null,"code":"var _jsxFileName = \"/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport KeyModal from './KeyModal';\nimport \"react-chat-elements/dist/main.css\";\nimport { MessageBox, Input } from \"react-chat-elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', function () {\n  fetch('/delete-files', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => console.log('Success:', data)).catch(error => {\n    console.error('Error:', error);\n  });\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState('');\n  const [extractedSentences, setExtractedSentences] = useState([]);\n  const [query, setQuery] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n  const [file, setFile] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  useEffect(() => {\n    // Automatically open the modal when the page loads\n    setIsModalOpen(true);\n  }, []);\n  const handleKeySubmit = async (apikey, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n      const response = await fetch('http://127.0.0.1:5000/process_key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apikey,\n          org\n        })\n      });\n      const data = await response.json();\n      setIsModalOpen(false); // Close the modal after submitting\n    } catch (error) {\n      console.error('Error submitting password:', error);\n    }\n  };\n  const handleCopyToClipboard = sentence => {\n    navigator.clipboard.writeText(sentence).then(() => {\n      console.log('Sentence copied to clipboard:', sentence);\n    }).catch(error => {\n      console.error('Error copying sentence to clipboard:', error);\n    });\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json());\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true);\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  const handleHover = event => {\n    event.target.style.color = 'grey'; // Change text color on hover\n    event.target.style.borderColor = 'grey'; // Change border color on hover\n  };\n  const handleHoverOut = event => {\n    event.target.style.color = ''; // Reset text color when hover ends\n    event.target.style.borderColor = ''; // Reset border color when hover ends\n  };\n  const handleSendMessage = message => {\n    const payload = {\n      message,\n      // the message text from the input\n      description // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data.startsWith(\"########## Feedback: \")) {\n          const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n          const pattern = /\\*\\*(.*?)\\*\\*/g;\n          const matches = remainingMessage.match(pattern);\n          if (matches) {\n            const extractedSentences = matches.map(match => match.slice(2, -2));\n            const replacedMessage = remainingMessage.replace(pattern, match => match.replace(/\\*\\*/g, \"'\"));\n            setMessages(prev => [...prev, {\n              text: replacedMessage,\n              from: 'bot'\n            }]);\n            setExtractedSentences(extractedSentences);\n          } else {\n            setMessages(prev => [...prev, {\n              text: remainingMessage,\n              from: 'bot'\n            }]);\n          }\n\n          // const extractedSentences = remainingMessage.match(pattern).map(match => match.slice(2, -2));\n          // const replacedMessage = remainingMessage.replace(pattern, (match) => {\n          //   return match.replace(/\\*\\*/g, \"'\");\n          // });\n          // setMessages(prev => [...prev, { text: remainingMessage, from: 'bot' }]);\n          // setExtractedSentences(extractedSentences);\n        } else {\n          setBackendOutputs(prev => [...prev, data]);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    }).catch(error => console.error('Error:', error));\n    setMessages(prev => [...prev, {\n      text: message,\n      from: 'user'\n    }]);\n    // setDescription('');\n  };\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleUpload();\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n      setQuery('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(KeyModal, {\n      isOpen: isModalOpen,\n      onSubmit: handleKeySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.from === 'user' ? 'right' : 'left'\n              },\n              children: msg.from === 'user' ? /*#__PURE__*/_jsxDEV(MessageBox, {\n                position: \"right\",\n                type: \"text\",\n                text: msg.text,\n                date: new Date()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 13\n              }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n                position: \"left\",\n                type: \"text\",\n                title: \"LEAP\",\n                text: msg.text,\n                date: new Date()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 13\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extracted-section\",\n            children: extractedSentences && extractedSentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              onClick: () => {\n                handleCopyToClipboard(sentence);\n                setQuery(sentence);\n                setExtractedSentences([]);\n              },\n              onMouseEnter: handleHover // Change color on hover\n              ,\n              onMouseLeave: handleHoverOut // Reset color when hover ends\n              ,\n              children: sentence\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange,\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50%',\n              maxWidth: '800px',\n              margin: '0 auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: description,\n              onChange: handleDescriptionChange,\n              placeholder: \"Type data description...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50%',\n              maxWidth: '800px',\n              margin: '0 auto'\n            },\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: query,\n              onKeyDown: handleMessageInput,\n              onChange: e => setQuery(e.target.value),\n              placeholder: \"Type query...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"LEAP Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"Dynamic from backend\",\n              onError: e => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subtitle\",\n              children: \"Column Mapping Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: backendOutputs.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: output\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"YvQ71hz0aZb0pV1MNhpgDk5w1Q4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","KeyModal","MessageBox","Input","jsxDEV","_jsxDEV","document","addEventListener","fetch","method","headers","then","response","json","data","console","log","catch","error","App","_s","messages","setMessages","backendOutputs","setBackendOutputs","description","setDescription","extractedSentences","setExtractedSentences","query","setQuery","imageUrl","setImageUrl","showImage","setShowImage","file","setFile","isModalOpen","setIsModalOpen","handleKeySubmit","apikey","org","body","JSON","stringify","handleCopyToClipboard","sentence","navigator","clipboard","writeText","handleFileChange","event","target","files","handleDescriptionChange","value","handleUpload","alert","formData","FormData","append","interval","setInterval","Date","getTime","clearInterval","handleHover","style","color","borderColor","handleHoverOut","handleSendMessage","message","payload","eventSource","EventSource","onmessage","trim","startsWith","remainingMessage","slice","length","pattern","matches","match","map","replacedMessage","replace","prev","text","from","onerror","close","handleMessageInput","key","className","children","isOpen","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","textAlign","position","type","date","title","marginBottom","border","padding","onClick","onMouseEnter","onMouseLeave","onChange","accept","width","maxWidth","margin","placeholder","onKeyDown","e","src","alt","onError","output","_c","$RefreshReg$"],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["import React, { useState,  useEffect } from 'react';\nimport './App.css';\nimport KeyModal from './KeyModal';\n\nimport \"react-chat-elements/dist/main.css\"\nimport { MessageBox, Input } from \"react-chat-elements\";\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  fetch('/delete-files', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      }\n  })\n  .then(response => response.json())\n  .then(data => console.log('Success:', data))\n  .catch((error) => {\n      console.error('Error:', error);\n  });\n});\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState(''); \n\n  const [extractedSentences, setExtractedSentences] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n\n  const [file, setFile] = useState(null);\n\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  useEffect(() => {\n      // Automatically open the modal when the page loads\n      setIsModalOpen(true);\n  }, []);\n\n  const handleKeySubmit = async (apikey, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n        const response = await fetch('http://127.0.0.1:5000/process_key', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ apikey, org }),\n        });\n        const data = await response.json();\n        setIsModalOpen(false); // Close the modal after submitting\n\n    } catch (error) {\n        console.error('Error submitting password:', error);\n    }\n};\n\n  const handleCopyToClipboard = (sentence) => {\n    navigator.clipboard.writeText(sentence)\n      .then(() => {\n        console.log('Sentence copied to clipboard:', sentence);\n      })\n      .catch((error) => {\n        console.error('Error copying sentence to clipboard:', error);\n      });\n  };\n\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData,\n    })\n    .then(response => response.json())\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true); \n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  const handleHover = (event) => {\n    event.target.style.color = 'grey'; // Change text color on hover\n    event.target.style.borderColor = 'grey'; // Change border color on hover\n  };\n\n  const handleHoverOut = (event) => {\n    event.target.style.color = ''; // Reset text color when hover ends\n    event.target.style.borderColor = ''; // Reset border color when hover ends\n  };\n\n  const handleSendMessage = (message) => {\n    const payload = {\n      message,  // the message text from the input\n      description  // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    })\n\n    .then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data.startsWith(\"########## Feedback: \")) {\n          const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n          const pattern = /\\*\\*(.*?)\\*\\*/g;\n          const matches = remainingMessage.match(pattern);\n          if (matches) {\n            const extractedSentences = matches.map(match => match.slice(2, -2));\n            const replacedMessage = remainingMessage.replace(pattern, match => match.replace(/\\*\\*/g, \"'\"));\n            setMessages(prev => [...prev, { text: replacedMessage, from: 'bot' }]);\n            setExtractedSentences(extractedSentences);\n          } else {\n            setMessages(prev => [...prev, { text: remainingMessage, from: 'bot' }]);\n          }\n\n          // const extractedSentences = remainingMessage.match(pattern).map(match => match.slice(2, -2));\n          // const replacedMessage = remainingMessage.replace(pattern, (match) => {\n          //   return match.replace(/\\*\\*/g, \"'\");\n          // });\n          // setMessages(prev => [...prev, { text: remainingMessage, from: 'bot' }]);\n          // setExtractedSentences(extractedSentences);\n        } else {\n          setBackendOutputs(prev => [...prev, data]);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    })\n    \n    .catch(error => console.error('Error:', error));\n\n    setMessages(prev => [...prev, { text: message, from: 'user' }]);\n    // setDescription('');\n  };\n\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleUpload();\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <KeyModal isOpen={isModalOpen} onSubmit={handleKeySubmit} /> \n      <div className=\"grid-container\">\n        <div className=\"chat-section\">\n          <header className=\"App-header\">\n            {/* <ul>\n              {messages.map((msg, index) => (\n                <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n                  {msg.text}\n                </li>\n              ))}\n            </ul> */}\n                  <ul>\n        {messages.map((msg, index) => (\n          <div key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' } }>\n          {msg.from === 'user' ? (\n            <MessageBox\n              position='right'\n              type='text'\n              text={msg.text}\n              date={new Date()}\n            />\n          ) : (\n            <MessageBox\n              position='left'\n              type='text'\n              title=\"LEAP\"\n              text={msg.text}\n              date={new Date()}\n            />\n          )}\n          </div>\n        ))}\n      </ul>\n            <div className=\"extracted-section\">\n              {extractedSentences && extractedSentences.map((sentence, index) => (\n                <div key={index} \n                style={{ marginBottom: '10px', border: '1px solid #ccc', padding: '5px' }}\n                onClick={() => {\n                  handleCopyToClipboard(sentence);\n                  setQuery(sentence);\n                  setExtractedSentences([]);\n                }}\n                onMouseEnter={handleHover} // Change color on hover\n                onMouseLeave={handleHoverOut} // Reset color when hover ends\n                >\n                  {sentence}\n                </div>\n              ))}\n            </div>\n            <div>\n              <input type=\"file\" onChange={handleFileChange} accept=\".csv\" />\n              {/* <button onClick={handleUpload}>Upload File</button> */}\n            </div>\n            <div style={{ width: '50%', maxWidth: '800px', margin: '0 auto' }}>\n            <Input type=\"text\" value={description} onChange={handleDescriptionChange} placeholder=\"Type data description...\" />\n            </div>\n            <div style={{ width: '50%', maxWidth: '800px', margin: '0 auto' }}>\n            <Input type=\"text\" value={query} onKeyDown={handleMessageInput} onChange={(e) => setQuery(e.target.value)} placeholder=\"Type query...\" />\n            </div>\n          </header>\n        </div>\n        <div className=\"output-section\">\n          <h2>LEAP Output:</h2>\n          <div>\n          {showImage && (\n            <div>\n              <img src={imageUrl} alt=\"Dynamic from backend\" onError={(e) => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }} />\n              <div className=\"subtitle\">Column Mapping Relationship</div>\n            </div>\n          )}\n          </div>\n          <pre>\n            {backendOutputs.map((output, index) => (\n              <div key={index}>{output}</div>\n            ))}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
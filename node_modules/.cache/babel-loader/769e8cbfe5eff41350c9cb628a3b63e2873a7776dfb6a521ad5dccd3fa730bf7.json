{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [messages, setMessages] = useState([]);\n//   const [backendOutputs, setBackendOutputs] = useState([]);\n\n//   useEffect(() => {\n//     const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n//     eventSource.onmessage = event => {\n//       console.log('Received event:', event.data);  // Ensure this logs to console\n//       setBackendOutputs(prev => [...prev, event.data]);\n//     };\n//     eventSource.onerror = error => {\n//       console.error('EventSource error:', error);\n//       eventSource.close();\n//     };\n//     return () => eventSource.close();\n//   }, []);\n\n//   const handleSendMessage = (message) => {\n//     fetch('/display_chat', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ input: message })\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       data.messages.forEach((output) => {\n//         if (output.startsWith(\"**********\")) {\n//           setMessages(prev => [...prev, { text: output, from: 'bot' }]);\n//         } else {\n//           setBackendOutputs(prev => [...prev, output]);\n//         }\n//       });\n//     })\n//     .catch(error => console.error('Error:', error));\n//   };\n\n//   const handleMessageInput = event => {\n//     if (event.key === 'Enter' && event.target.value.trim() !== '') {\n//       const newMessage = event.target.value;\n//       setMessages(prev => [...prev, { text: newMessage, from: 'user' }]);\n//       handleSendMessage(newMessage);\n//       event.target.value = '';  // Clear input after sending\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"grid-container\">\n//         <div className=\"chat-section\">\n//           <header className=\"App-header\">\n//             <ul>\n//               {messages.map((msg, index) => (\n//                 <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n//                   {msg.text}\n//                 </li>\n//               ))}\n//             </ul>\n//             <input type=\"text\" onKeyDown={handleMessageInput} placeholder=\"Type a message...\" />\n//           </header>\n//         </div>\n//         <div className=\"output-section\">\n//           <h2>Backend Execution Output:</h2>\n//           <pre>\n//             {backendOutputs.map((output, index) => (\n//               <div key={index}>{output}</div>\n//             ))}\n//           </pre>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n// import React, { useState, useEffect } from 'react';\n\n// function App() {\n//   const [numbers, setNumbers] = useState([]);\n\n//   useEffect(() => {\n//     const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n//     eventSource.onmessage = event => {\n//       console.log('Received event:', event.data);  // Ensure this logs to console\n//       setNumbers(prev => [...prev, event.data]);\n//     };\n//     eventSource.onerror = error => {\n//       console.error('EventSource error:', error);\n//       eventSource.close();\n//     };\n//     return () => eventSource.close();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Numbers Stream</h1>\n//       <ul>\n//         {numbers.map((num, index) => (\n//           <li key={index}>{num}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;","map":{"version":3,"names":[],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import './App.css';\n\n// function App() {\n//   const [messages, setMessages] = useState([]);\n//   const [backendOutputs, setBackendOutputs] = useState([]);\n\n//   useEffect(() => {\n//     const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n//     eventSource.onmessage = event => {\n//       console.log('Received event:', event.data);  // Ensure this logs to console\n//       setBackendOutputs(prev => [...prev, event.data]);\n//     };\n//     eventSource.onerror = error => {\n//       console.error('EventSource error:', error);\n//       eventSource.close();\n//     };\n//     return () => eventSource.close();\n//   }, []);\n\n//   const handleSendMessage = (message) => {\n//     fetch('/display_chat', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({ input: message })\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//       data.messages.forEach((output) => {\n//         if (output.startsWith(\"**********\")) {\n//           setMessages(prev => [...prev, { text: output, from: 'bot' }]);\n//         } else {\n//           setBackendOutputs(prev => [...prev, output]);\n//         }\n//       });\n//     })\n//     .catch(error => console.error('Error:', error));\n//   };\n\n//   const handleMessageInput = event => {\n//     if (event.key === 'Enter' && event.target.value.trim() !== '') {\n//       const newMessage = event.target.value;\n//       setMessages(prev => [...prev, { text: newMessage, from: 'user' }]);\n//       handleSendMessage(newMessage);\n//       event.target.value = '';  // Clear input after sending\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className=\"grid-container\">\n//         <div className=\"chat-section\">\n//           <header className=\"App-header\">\n//             <ul>\n//               {messages.map((msg, index) => (\n//                 <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n//                   {msg.text}\n//                 </li>\n//               ))}\n//             </ul>\n//             <input type=\"text\" onKeyDown={handleMessageInput} placeholder=\"Type a message...\" />\n//           </header>\n//         </div>\n//         <div className=\"output-section\">\n//           <h2>Backend Execution Output:</h2>\n//           <pre>\n//             {backendOutputs.map((output, index) => (\n//               <div key={index}>{output}</div>\n//             ))}\n//           </pre>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n// import React, { useState, useEffect } from 'react';\n\n// function App() {\n//   const [numbers, setNumbers] = useState([]);\n\n//   useEffect(() => {\n//     const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n//     eventSource.onmessage = event => {\n//       console.log('Received event:', event.data);  // Ensure this logs to console\n//       setNumbers(prev => [...prev, event.data]);\n//     };\n//     eventSource.onerror = error => {\n//       console.error('EventSource error:', error);\n//       eventSource.close();\n//     };\n//     return () => eventSource.close();\n//   }, []);\n\n//   return (\n//     <div>\n//       <h1>Numbers Stream</h1>\n//       <ul>\n//         {numbers.map((num, index) => (\n//           <li key={index}>{num}</li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default App;\n\n\n\n\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
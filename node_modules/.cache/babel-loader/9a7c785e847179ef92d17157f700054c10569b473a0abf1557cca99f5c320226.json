{"ast":null,"code":"var _jsxFileName = \"/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n  const [file, setFile] = useState(null);\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json());\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true);\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  const handleSendMessage = message => {\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        message\n      })\n    }).then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data.startsWith(\"**********\")) {\n          setMessages(prev => [...prev, {\n            text: data,\n            from: 'bot'\n          }]); // Assuming setMessage updates a state for 'message'\n        } else {\n          setBackendOutputs(prev => [...prev, data]);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    }).catch(error => console.error('Error:', error));\n    setMessages(prev => [...prev, {\n      text: message,\n      from: 'user'\n    }]);\n  };\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                textAlign: msg.from === 'user' ? 'right' : 'left'\n              },\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onKeyDown: handleMessageInput,\n            placeholder: \"Type query or query ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange,\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpload,\n              children: \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: description,\n              onChange: handleDescriptionChange,\n              placeholder: \"Type description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"LEAP Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"Dynamic from backend\",\n              onError: e => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: backendOutputs.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: output\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c5MjBaj/TYKVILoLt93hatbYZx8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","messages","setMessages","backendOutputs","setBackendOutputs","description","setDescription","imageUrl","setImageUrl","showImage","setShowImage","file","setFile","handleFileChange","event","target","files","handleUpload","alert","formData","FormData","append","fetch","method","body","then","response","json","interval","setInterval","Date","getTime","clearInterval","handleSendMessage","message","headers","JSON","stringify","eventSource","EventSource","onmessage","data","trim","startsWith","prev","text","from","onerror","error","console","close","catch","handleMessageInput","key","value","className","children","map","msg","index","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onKeyDown","placeholder","onChange","accept","onClick","handleDescriptionChange","src","alt","onError","e","output","_c","$RefreshReg$"],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["import React, { useState,  useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState(''); \n\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n\n  const [file, setFile] = useState(null);\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData,\n    })\n    .then(response => response.json())\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true); \n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  const handleSendMessage = (message) => {\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ message })\n    })\n\n    .then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data.startsWith(\"**********\")) {\n          setMessages(prev => [...prev, { text: data, from: 'bot' }]); // Assuming setMessage updates a state for 'message'\n        } else {\n          setBackendOutputs(prev => [...prev, data]);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    })\n    \n    .catch(error => console.error('Error:', error));\n\n    setMessages(prev => [...prev, { text: message, from: 'user' }]);\n  };\n\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"grid-container\">\n        <div className=\"chat-section\">\n          <header className=\"App-header\">\n            <ul>\n              {messages.map((msg, index) => (\n                <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n                  {msg.text}\n                </li>\n              ))}\n            </ul>\n            <input type=\"text\" onKeyDown={handleMessageInput} placeholder=\"Type query or query ID\" />\n            <div>\n              <input type=\"file\" onChange={handleFileChange} accept=\".csv\" />\n              <button onClick={handleUpload}>Upload File</button>\n            </div>\n            <div>\n              <input type=\"text\" value={description} onChange={handleDescriptionChange} placeholder=\"Type description\" />\n            </div>\n          </header>\n        </div>\n        <div className=\"output-section\">\n          <h2>LEAP Output:</h2>\n          <div>\n          {showImage && (\n            <div>\n              <img src={imageUrl} alt=\"Dynamic from backend\" onError={(e) => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }} />\n            </div>\n          )}\n          </div>\n          <pre>\n            {backendOutputs.map((output, index) => (\n              <div key={index}>{output}</div>\n            ))}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n// import KeyModal from './KeyModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', function () {\n  fetch('/delete-files', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => console.log('Success:', data)).catch(error => {\n    console.error('Error:', error);\n  });\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n  const [file, setFile] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  useEffect(() => {\n    // Automatically open the modal when the page loads\n    setIsModalOpen(true);\n  }, []);\n  const handleKeySubmit = async (key, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n      const response = await fetch('http://127.0.0.1:5000/process_key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          key,\n          org\n        })\n      });\n      const data = await response.json();\n      setIsModalOpen(false); // Close the modal after submitting\n    } catch (error) {\n      console.error('Error submitting password:', error);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json());\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true);\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  const handleSendMessage = message => {\n    const payload = {\n      message,\n      // the message text from the input\n      description // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data.startsWith(\"########## Feedback: \")) {\n          const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n          setMessages(prev => [...prev, {\n            text: remainingMessage,\n            from: 'bot'\n          }]);\n        } else {\n          setBackendOutputs(prev => [...prev, data]);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    }).catch(error => console.error('Error:', error));\n    setMessages(prev => [...prev, {\n      text: message,\n      from: 'user'\n    }]);\n    // setDescription('');\n  };\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                textAlign: msg.from === 'user' ? 'right' : 'left'\n              },\n              children: msg.text\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              onChange: handleFileChange,\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleUpload,\n              children: \"Upload File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: description,\n              onChange: handleDescriptionChange,\n              placeholder: \"Type data description...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onKeyDown: handleMessageInput,\n            placeholder: \"Type query...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"LEAP Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"Dynamic from backend\",\n              onError: e => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: backendOutputs.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: output\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"L54WkrXFt1wie9BsWMP+fnf3rBI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","document","addEventListener","fetch","method","headers","then","response","json","data","console","log","catch","error","App","_s","messages","setMessages","backendOutputs","setBackendOutputs","description","setDescription","imageUrl","setImageUrl","showImage","setShowImage","file","setFile","isModalOpen","setIsModalOpen","handleKeySubmit","key","org","body","JSON","stringify","handleFileChange","event","target","files","handleDescriptionChange","value","handleUpload","alert","formData","FormData","append","interval","setInterval","Date","getTime","clearInterval","handleSendMessage","message","payload","eventSource","EventSource","onmessage","trim","startsWith","remainingMessage","slice","length","prev","text","from","onerror","close","handleMessageInput","className","children","map","msg","index","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","placeholder","onKeyDown","src","alt","onError","e","output","_c","$RefreshReg$"],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["import React, { useState,  useEffect } from 'react';\nimport './App.css';\n// import KeyModal from './KeyModal';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  fetch('/delete-files', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      }\n  })\n  .then(response => response.json())\n  .then(data => console.log('Success:', data))\n  .catch((error) => {\n      console.error('Error:', error);\n  });\n});\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState(''); \n\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n\n  const [file, setFile] = useState(null);\n\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  useEffect(() => {\n      // Automatically open the modal when the page loads\n      setIsModalOpen(true);\n  }, []);\n\n  const handleKeySubmit = async (key, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n        const response = await fetch('http://127.0.0.1:5000/process_key', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ key, org }),\n        });\n        const data = await response.json();\n        setIsModalOpen(false); // Close the modal after submitting\n\n    } catch (error) {\n        console.error('Error submitting password:', error);\n    }\n};\n\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleUpload = () => {\n    if (!file) {\n      alert('Please select a file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData,\n    })\n    .then(response => response.json())\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true); \n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  const handleSendMessage = (message) => {\n    const payload = {\n      message,  // the message text from the input\n      description  // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    })\n\n    .then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data.startsWith(\"########## Feedback: \")) {\n          const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n          setMessages(prev => [...prev, { text: remainingMessage, from: 'bot' }]);\n        } else {\n          setBackendOutputs(prev => [...prev, data]);\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    })\n    \n    .catch(error => console.error('Error:', error));\n\n    setMessages(prev => [...prev, { text: message, from: 'user' }]);\n    // setDescription('');\n  };\n\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      {/* <KeyModal isOpen={isModalOpen} onSubmit={handleKeySubmit} />  */}\n      <div className=\"grid-container\">\n        <div className=\"chat-section\">\n          <header className=\"App-header\">\n            <ul>\n              {messages.map((msg, index) => (\n                <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n                  {msg.text}\n                </li>\n              ))}\n            </ul>\n            <div>\n              <input type=\"file\" onChange={handleFileChange} accept=\".csv\" />\n              <button onClick={handleUpload}>Upload File</button>\n            </div>\n            <div>\n              <input type=\"text\" value={description} onChange={handleDescriptionChange} placeholder=\"Type data description...\" />\n            </div>\n            <input type=\"text\" onKeyDown={handleMessageInput} placeholder=\"Type query...\" />\n          </header>\n        </div>\n        <div className=\"output-section\">\n          <h2>LEAP Output:</h2>\n          <div>\n          {showImage && (\n            <div>\n              <img src={imageUrl} alt=\"Dynamic from backend\" onError={(e) => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }} />\n            </div>\n          )}\n          </div>\n          <pre>\n            {backendOutputs.map((output, index) => (\n              <div key={index}>{output}</div>\n            ))}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport KeyModal from './KeyModal';\nimport \"react-chat-elements/dist/main.css\";\nimport { MessageBox, Input } from \"react-chat-elements\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Comment } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndocument.addEventListener('DOMContentLoaded', function () {\n  fetch('/delete-files', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }).then(response => response.json()).then(data => console.log('Success:', data)).catch(error => {\n    console.error('Error:', error);\n  });\n});\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState('');\n  const [extractedSentences, setExtractedSentences] = useState([]);\n  const [query, setQuery] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n  const [file, setFile] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [filePaths, setFilePaths] = useState({\n    result: '',\n    augmentedTable: ''\n  });\n  useEffect(() => {\n    // Automatically open the modal when the page loads\n    setIsModalOpen(true);\n  }, []);\n  const handleKeySubmit = async (apikey, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n      const response = await fetch('http://127.0.0.1:5000/process_key', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          apikey,\n          org\n        })\n      });\n      const data = await response.json();\n      setIsModalOpen(false); // Close the modal after submitting\n    } catch (error) {\n      console.error('Error submitting password:', error);\n    }\n  };\n  const handleCopyToClipboard = sentence => {\n    navigator.clipboard.writeText(sentence).then(() => {\n      console.log('Sentence copied to clipboard:', sentence);\n    }).catch(error => {\n      console.error('Error copying sentence to clipboard:', error);\n    });\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleDescriptionChange = event => {\n    setDescription(event.target.value);\n  };\n  const handleUpload = () => {\n    if (!file) {\n      // alert('Please select a file first!');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData\n    }).then(response => response.json());\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true);\n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n  const handleHover = event => {\n    event.target.style.color = 'white'; // Change text color on hover\n    event.target.style.borderColor = 'white'; // Change border color on hover\n  };\n  const handleHoverOut = event => {\n    event.target.style.color = ''; // Reset text color when hover ends\n    event.target.style.borderColor = ''; // Reset border color when hover ends\n  };\n  const handleSendMessage = message => {\n    const payload = {\n      message,\n      // the message text from the input\n      description // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    }).then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data === \"start\") {\n          setIsLoading(true);\n        } else if (data === \"complete\") {\n          setIsLoading(false);\n        } else {\n          if (data.startsWith(\"########## Feedback: \")) {\n            const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n            const pattern = /\\*\\*(.*?)\\*\\*/g;\n            const matches = remainingMessage.match(pattern);\n            if (matches) {\n              const extractedSentences = matches.map(match => match.slice(2, -2));\n              const replacedMessage = remainingMessage.replace(pattern, match => match.replace(/\\*\\*/g, \"'\"));\n              setMessages(prev => [...prev, {\n                text: replacedMessage,\n                from: 'bot'\n              }]);\n              setExtractedSentences(extractedSentences);\n            } else {\n              setMessages(prev => [...prev, {\n                text: remainingMessage,\n                from: 'bot'\n              }]);\n            }\n          } else {\n            if (data === \"Succeed!\") {\n              setFilePaths({\n                result: \"./uploads/result.csv\",\n                augmentedTable: \"./uploads/augmented_table.csv\"\n              });\n              const downloadMessage = \"Your files are ready to download: <a href='./uploads/result.csv' download='result.csv'>Download Result</a>, <a href='./uploads/augmented_table.csv' download='augmented_table.csv'>Download Result</a>\";\n              setMessages(prev => [...prev, {\n                text: downloadMessage,\n                from: 'bot'\n              }]);\n            }\n            setBackendOutputs(prev => [...prev, data]);\n          }\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    }).catch(error => console.error('Error:', error));\n    setMessages(prev => [...prev, {\n      text: message,\n      from: 'user'\n    }]);\n    // setDescription('');\n  };\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleUpload();\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n      setQuery('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(KeyModal, {\n      isOpen: isModalOpen,\n      onSubmit: handleKeySubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: /*#__PURE__*/_jsxDEV(\"header\", {\n          className: \"App-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: msg.from === 'user' ? 'right' : 'left'\n              },\n              children: msg.from === 'user' ? /*#__PURE__*/_jsxDEV(MessageBox, {\n                position: \"right\",\n                type: \"text\",\n                text: msg.text\n                // date={new Date()}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 13\n              }, this) : /*#__PURE__*/_jsxDEV(MessageBox, {\n                position: \"left\",\n                type: \"text\",\n                title: \"LEAP\",\n                text: msg.text\n                // date={new Date()}\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 13\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"extracted-section\",\n            children: extractedSentences && extractedSentences.map((sentence, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '70%',\n                fontSize: '15px',\n                marginLeft: 'auto',\n                marginRight: 'auto',\n                marginBottom: '10px',\n                border: '1px solid #ccc',\n                padding: '5px'\n              },\n              onClick: () => {\n                handleCopyToClipboard(sentence);\n                setQuery(sentence);\n                setExtractedSentences([]);\n              },\n              onMouseEnter: handleHover // Change color on hover\n              ,\n              onMouseLeave: handleHoverOut // Reset color when hover ends\n              ,\n              children: sentence\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50%',\n              fontSize: '15px',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              gap: '20px',\n              marginBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"file-input-label\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  onChange: handleFileChange,\n                  accept: \".csv\",\n                  style: {\n                    display: 'none'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"file-input-button\",\n                  children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                    icon: faUpload\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 19\n                  }, this), \" Upload Data\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                width: '50%',\n                maxWidth: '800px'\n              },\n              children: /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                value: description,\n                onChange: handleDescriptionChange,\n                placeholder: \"Type data description...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '15px',\n              marginBottom: '10px'\n            },\n            children: [\"Uploaded File: \", file.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              width: '50%',\n              maxWidth: '800px',\n              margin: '0 auto'\n            },\n            children: isLoading ? /*#__PURE__*/_jsxDEV(Comment, {\n              visible: true,\n              height: \"80\",\n              width: \"80\",\n              ariaLabel: \"comment-loading\",\n              wrapperStyle: {},\n              wrapperClass: \"comment-wrapper\",\n              color: \"#fff\",\n              backgroundColor: \"grey\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 12\n            }, this) : /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: query,\n              onKeyDown: handleMessageInput,\n              onChange: e => setQuery(e.target.value),\n              placeholder: \"Type query...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"output-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"LEAP Output:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: showImage && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: \"Dynamic from backend\",\n              onError: e => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"subtitle\",\n              children: \"Column Mapping Relationship\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: backendOutputs.map((output, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: output\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Xjxy1AeCSfk+/3pkP/qXl/NK2OU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","KeyModal","MessageBox","Input","FontAwesomeIcon","faUpload","Comment","jsxDEV","_jsxDEV","document","addEventListener","fetch","method","headers","then","response","json","data","console","log","catch","error","App","_s","messages","setMessages","backendOutputs","setBackendOutputs","description","setDescription","extractedSentences","setExtractedSentences","query","setQuery","imageUrl","setImageUrl","showImage","setShowImage","file","setFile","isModalOpen","setIsModalOpen","isLoading","setIsLoading","filePaths","setFilePaths","result","augmentedTable","handleKeySubmit","apikey","org","body","JSON","stringify","handleCopyToClipboard","sentence","navigator","clipboard","writeText","handleFileChange","event","target","files","handleDescriptionChange","value","handleUpload","formData","FormData","append","interval","setInterval","Date","getTime","clearInterval","handleHover","style","color","borderColor","handleHoverOut","handleSendMessage","message","payload","eventSource","EventSource","onmessage","trim","startsWith","remainingMessage","slice","length","pattern","matches","match","map","replacedMessage","replace","prev","text","from","downloadMessage","onerror","close","handleMessageInput","key","className","children","isOpen","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","textAlign","position","type","title","width","fontSize","marginLeft","marginRight","marginBottom","border","padding","onClick","onMouseEnter","onMouseLeave","display","justifyContent","alignItems","gap","onChange","accept","icon","maxWidth","placeholder","name","margin","visible","height","ariaLabel","wrapperStyle","wrapperClass","backgroundColor","onKeyDown","e","src","alt","onError","output","_c","$RefreshReg$"],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["import React, { useState,  useEffect } from 'react';\nimport './App.css';\nimport KeyModal from './KeyModal';\n\nimport \"react-chat-elements/dist/main.css\"\nimport { MessageBox, Input } from \"react-chat-elements\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload } from '@fortawesome/free-solid-svg-icons';\nimport { Comment } from 'react-loader-spinner';\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  fetch('/delete-files', {\n      method: 'POST',\n      headers: {\n          'Content-Type': 'application/json'\n      }\n  })\n  .then(response => response.json())\n  .then(data => console.log('Success:', data))\n  .catch((error) => {\n      console.error('Error:', error);\n  });\n});\n\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [backendOutputs, setBackendOutputs] = useState([]);\n  const [description, setDescription] = useState(''); \n\n  const [extractedSentences, setExtractedSentences] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [showImage, setShowImage] = useState(false);\n\n  const [file, setFile] = useState(null);\n\n  const [isModalOpen, setIsModalOpen] = useState(true);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const [filePaths, setFilePaths] = useState({result: '', augmentedTable: ''});\n\n  useEffect(() => {\n      // Automatically open the modal when the page loads\n      setIsModalOpen(true);\n  }, []);\n\n  const handleKeySubmit = async (apikey, org) => {\n    setIsModalOpen(false); // Close the modal after submitting\n    // Here you can call your backend API\n    try {\n        const response = await fetch('http://127.0.0.1:5000/process_key', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ apikey, org }),\n        });\n        const data = await response.json();\n        setIsModalOpen(false); // Close the modal after submitting\n\n    } catch (error) {\n        console.error('Error submitting password:', error);\n    }\n};\n\n  const handleCopyToClipboard = (sentence) => {\n    navigator.clipboard.writeText(sentence)\n      .then(() => {\n        console.log('Sentence copied to clipboard:', sentence);\n      })\n      .catch((error) => {\n        console.error('Error copying sentence to clipboard:', error);\n      });\n  };\n\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleDescriptionChange = (event) => {\n    setDescription(event.target.value);\n  };\n\n  const handleUpload = () => {\n    if (!file) {\n      // alert('Please select a file first!');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    fetch('http://127.0.0.1:5000/upload-csv', {\n      method: 'POST',\n      body: formData,\n    })\n    .then(response => response.json())\n    // .then(data => alert('Success: ' + data.message))\n    // .catch(error => alert('Error: ' + error));\n  };\n\n  useEffect(() => {\n    // Polling mechanism to periodically check for the image\n    const interval = setInterval(() => {\n      // Update the image URL with a new timestamp to avoid cache issues\n      setImageUrl(`/static/dot_graph.png?timestamp=${new Date().getTime()}`);\n      setShowImage(true); \n    }, 5000); // Update every 5 seconds\n\n    return () => clearInterval(interval); // Cleanup on component unmount\n  }, []);\n\n  const handleHover = (event) => {\n    event.target.style.color = 'white'; // Change text color on hover\n    event.target.style.borderColor = 'white'; // Change border color on hover\n  };\n\n  const handleHoverOut = (event) => {\n    event.target.style.color = ''; // Reset text color when hover ends\n    event.target.style.borderColor = ''; // Reset border color when hover ends\n  };\n\n  const handleSendMessage = (message) => {\n    const payload = {\n      message,  // the message text from the input\n      description  // the current state of the description input\n    };\n    // POST request to start the count\n    fetch('http://127.0.0.1:5000/start_count', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(payload)\n    })\n\n    .then(() => {\n      // Establish an EventSource connection to receive the count\n      const eventSource = new EventSource('http://127.0.0.1:5000/test_stream');\n      eventSource.onmessage = event => {\n        const data = event.data.trim();\n        if (data === \"start\") {\n          setIsLoading(true);\n        }\n        else if (data === \"complete\") {\n          setIsLoading(false);\n        }\n        else{          \n          if (data.startsWith(\"########## Feedback: \")) {\n            const remainingMessage = data.slice(\"########## Feedback: \".length).trim(); // Remove \"WARNING:\" and trim any extra whitespace\n            const pattern = /\\*\\*(.*?)\\*\\*/g;\n            const matches = remainingMessage.match(pattern);\n            if (matches) {\n              const extractedSentences = matches.map(match => match.slice(2, -2));\n              const replacedMessage = remainingMessage.replace(pattern, match => match.replace(/\\*\\*/g, \"'\"));\n              setMessages(prev => [...prev, { text: replacedMessage, from: 'bot' }]);\n              setExtractedSentences(extractedSentences);\n            } else {\n              setMessages(prev => [...prev, { text: remainingMessage, from: 'bot' }]);\n            }\n          } else {\n            if (data === \"Succeed!\") {\n              setFilePaths({result: \"./uploads/result.csv\", augmentedTable: \"./uploads/augmented_table.csv\"});\n              const downloadMessage = \"Your files are ready to download: <a href='./uploads/result.csv' download='result.csv'>Download Result</a>, <a href='./uploads/augmented_table.csv' download='augmented_table.csv'>Download Result</a>\";\n              setMessages(prev => [...prev, { text: downloadMessage, from: 'bot' }]);\n            }\n            setBackendOutputs(prev => [...prev, data]);\n          }\n        }\n      };\n      eventSource.onerror = error => {\n        console.error('EventSource error:', error);\n        eventSource.close();\n      };\n    })\n    \n    .catch(error => console.error('Error:', error));\n\n    setMessages(prev => [...prev, { text: message, from: 'user' }]);\n    // setDescription('');\n  };\n\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      handleUpload();\n      handleSendMessage(event.target.value);\n      event.target.value = '';\n      setBackendOutputs([]);\n      setQuery('');\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <KeyModal isOpen={isModalOpen} onSubmit={handleKeySubmit} /> \n      <div className=\"grid-container\">\n        <div className=\"chat-section\">\n          <header className=\"App-header\">\n            {/* <ul>\n              {messages.map((msg, index) => (\n                <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n                  {msg.text}\n                </li>\n              ))}\n            </ul> */}\n                  <ul>\n        {messages.map((msg, index) => (\n          <div key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' } }>\n          {msg.from === 'user' ? (\n            <MessageBox\n              position='right'\n              type='text'\n              text={msg.text}\n              // date={new Date()}\n            />\n          ) : (\n            <MessageBox\n              position='left'\n              type='text'\n              title=\"LEAP\"\n              text={msg.text}\n              // date={new Date()}\n            />\n          )}\n          </div>\n        ))}\n      </ul>\n            <div className=\"extracted-section\">\n              {extractedSentences && extractedSentences.map((sentence, index) => (\n                <div key={index} \n                style={{ width: '70%', fontSize: '15px', marginLeft: 'auto', marginRight: 'auto', marginBottom: '10px', border: '1px solid #ccc', padding: '5px' }}\n                onClick={() => {\n                  handleCopyToClipboard(sentence);\n                  setQuery(sentence);\n                  setExtractedSentences([]);\n                }}\n                onMouseEnter={handleHover} // Change color on hover\n                onMouseLeave={handleHoverOut} // Reset color when hover ends\n                >\n                  {sentence}\n                </div>\n              ))}\n            </div>\n            <div style={{  width: '50%', fontSize: '15px', display: 'flex', justifyContent: 'center', alignItems: 'center', gap: '20px' , marginBottom: '10px'}}>\n            <div>\n              <label className=\"file-input-label\">\n                <input\n                  type=\"file\"\n                  onChange={handleFileChange}\n                  accept=\".csv\"\n                  style={{ display: 'none' }}\n                />\n                <span className=\"file-input-button\">\n                  <FontAwesomeIcon icon={faUpload} /> Upload Data\n                </span>\n              </label>\n            </div>\n            <div style={{ width: '50%', maxWidth: '800px' }}>\n              <Input\n                type=\"text\"\n                value={description}\n                onChange={handleDescriptionChange}\n                placeholder=\"Type data description...\"\n              />\n            </div>\n          </div>\n          {file && (\n                <div style={{ fontSize: '15px', marginBottom: '10px'}}>\n                  Uploaded File: {file.name}\n                </div>\n              )}\n            <div style={{ width: '50%', maxWidth: '800px', margin: '0 auto' }}>\n             { isLoading ? (\n           <Comment\n           visible={true}\n           height=\"80\"\n           width=\"80\"\n           ariaLabel=\"comment-loading\"\n           wrapperStyle={{}}\n           wrapperClass=\"comment-wrapper\"\n           color=\"#fff\"\n           backgroundColor=\"grey\"\n           />\n             ) : (<Input type=\"text\" value={query} onKeyDown={handleMessageInput} onChange={(e) => setQuery(e.target.value)} placeholder=\"Type query...\" />)\n             }\n            </div>\n          </header>\n        </div>\n        <div className=\"output-section\">\n          <h2>LEAP Output:</h2>\n          <div>\n          {showImage && (\n            <div>\n              <img src={imageUrl} alt=\"Dynamic from backend\" onError={(e) => {\n                console.error('Failed to load image:', imageUrl);\n                setShowImage(false); // Hide the image if there is an error loading it\n              }} />\n              <div className=\"subtitle\">Column Mapping Relationship</div>\n            </div>\n          )}\n          </div>\n          <pre>\n            {backendOutputs.map((output, index) => (\n              <div key={index}>{output}</div>\n            ))}\n          </pre>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AACnD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAO,mCAAmC;AAC1C,SAASC,UAAU,EAAEC,KAAK,QAAQ,qBAAqB;AACvD,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,QAAQ,QAAQ,mCAAmC;AAC5D,SAASC,OAAO,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/CC,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAW;EACvDC,KAAK,CAAC,eAAe,EAAE;IACnBC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEF,IAAI,CAAC,CAAC,CAC3CG,KAAK,CAAEC,KAAK,IAAK;IACdH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC;AAGF,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,cAAc,EAAEC,iBAAiB,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6B,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM,CAAC+B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGhC,QAAQ,CAAC,EAAE,CAAC;EAChE,MAAM,CAACiC,KAAK,EAAEC,QAAQ,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAM,CAACmC,QAAQ,EAAEC,WAAW,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAACuC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAM,CAACyC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EAEpD,MAAM,CAAC2C,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC;IAAC+C,MAAM,EAAE,EAAE;IAAEC,cAAc,EAAE;EAAE,CAAC,CAAC;EAE5E/C,SAAS,CAAC,MAAM;IACZ;IACAyC,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAG,MAAAA,CAAOC,MAAM,EAAEC,GAAG,KAAK;IAC7CT,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;IACA,IAAI;MACA,MAAM1B,QAAQ,GAAG,MAAMJ,KAAK,CAAC,mCAAmC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEJ,MAAM;UAAEC;QAAI,CAAC;MACxC,CAAC,CAAC;MACF,MAAMjC,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;MAClCyB,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;IAE3B,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EAEC,MAAMiC,qBAAqB,GAAIC,QAAQ,IAAK;IAC1CC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACH,QAAQ,CAAC,CACpCzC,IAAI,CAAC,MAAM;MACVI,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEoC,QAAQ,CAAC;IACxD,CAAC,CAAC,CACDnC,KAAK,CAAEC,KAAK,IAAK;MAChBH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC;EAGD,MAAMsC,gBAAgB,GAAIC,KAAK,IAAK;IAClCrB,OAAO,CAACqB,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;EAED,MAAMC,uBAAuB,GAAIH,KAAK,IAAK;IACzC/B,cAAc,CAAC+B,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC;EACpC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAI,CAAC3B,IAAI,EAAE;MACT;MACA;IACF;IAEA,MAAM4B,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAE9B,IAAI,CAAC;IAE7B3B,KAAK,CAAC,kCAAkC,EAAE;MACxCC,MAAM,EAAE,MAAM;MACduC,IAAI,EAAEe;IACR,CAAC,CAAC,CACDpD,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC;IAClC;IACA;EACF,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMqE,QAAQ,GAAGC,WAAW,CAAC,MAAM;MACjC;MACAnC,WAAW,CAAE,mCAAkC,IAAIoC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAE,EAAC,CAAC;MACtEnC,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMoC,aAAa,CAACJ,QAAQ,CAAC,CAAC,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAId,KAAK,IAAK;IAC7BA,KAAK,CAACC,MAAM,CAACc,KAAK,CAACC,KAAK,GAAG,OAAO,CAAC,CAAC;IACpChB,KAAK,CAACC,MAAM,CAACc,KAAK,CAACE,WAAW,GAAG,OAAO,CAAC,CAAC;EAC5C,CAAC;EAED,MAAMC,cAAc,GAAIlB,KAAK,IAAK;IAChCA,KAAK,CAACC,MAAM,CAACc,KAAK,CAACC,KAAK,GAAG,EAAE,CAAC,CAAC;IAC/BhB,KAAK,CAACC,MAAM,CAACc,KAAK,CAACE,WAAW,GAAG,EAAE,CAAC,CAAC;EACvC,CAAC;EAED,MAAME,iBAAiB,GAAIC,OAAO,IAAK;IACrC,MAAMC,OAAO,GAAG;MACdD,OAAO;MAAG;MACVpD,WAAW,CAAE;IACf,CAAC;IACD;IACAjB,KAAK,CAAC,mCAAmC,EAAE;MACzCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CsC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC4B,OAAO;IAC9B,CAAC,CAAC,CAEDnE,IAAI,CAAC,MAAM;MACV;MACA,MAAMoE,WAAW,GAAG,IAAIC,WAAW,CAAC,mCAAmC,CAAC;MACxED,WAAW,CAACE,SAAS,GAAGxB,KAAK,IAAI;QAC/B,MAAM3C,IAAI,GAAG2C,KAAK,CAAC3C,IAAI,CAACoE,IAAI,CAAC,CAAC;QAC9B,IAAIpE,IAAI,KAAK,OAAO,EAAE;UACpB0B,YAAY,CAAC,IAAI,CAAC;QACpB,CAAC,MACI,IAAI1B,IAAI,KAAK,UAAU,EAAE;UAC5B0B,YAAY,CAAC,KAAK,CAAC;QACrB,CAAC,MACG;UACF,IAAI1B,IAAI,CAACqE,UAAU,CAAC,uBAAuB,CAAC,EAAE;YAC5C,MAAMC,gBAAgB,GAAGtE,IAAI,CAACuE,KAAK,CAAC,uBAAuB,CAACC,MAAM,CAAC,CAACJ,IAAI,CAAC,CAAC,CAAC,CAAC;YAC5E,MAAMK,OAAO,GAAG,gBAAgB;YAChC,MAAMC,OAAO,GAAGJ,gBAAgB,CAACK,KAAK,CAACF,OAAO,CAAC;YAC/C,IAAIC,OAAO,EAAE;cACX,MAAM7D,kBAAkB,GAAG6D,OAAO,CAACE,GAAG,CAACD,KAAK,IAAIA,KAAK,CAACJ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;cACnE,MAAMM,eAAe,GAAGP,gBAAgB,CAACQ,OAAO,CAACL,OAAO,EAAEE,KAAK,IAAIA,KAAK,CAACG,OAAO,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;cAC/FtE,WAAW,CAACuE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;gBAAEC,IAAI,EAAEH,eAAe;gBAAEI,IAAI,EAAE;cAAM,CAAC,CAAC,CAAC;cACtEnE,qBAAqB,CAACD,kBAAkB,CAAC;YAC3C,CAAC,MAAM;cACLL,WAAW,CAACuE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;gBAAEC,IAAI,EAAEV,gBAAgB;gBAAEW,IAAI,EAAE;cAAM,CAAC,CAAC,CAAC;YACzE;UACF,CAAC,MAAM;YACL,IAAIjF,IAAI,KAAK,UAAU,EAAE;cACvB4B,YAAY,CAAC;gBAACC,MAAM,EAAE,sBAAsB;gBAAEC,cAAc,EAAE;cAA+B,CAAC,CAAC;cAC/F,MAAMoD,eAAe,GAAG,wMAAwM;cAChO1E,WAAW,CAACuE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;gBAAEC,IAAI,EAAEE,eAAe;gBAAED,IAAI,EAAE;cAAM,CAAC,CAAC,CAAC;YACxE;YACAvE,iBAAiB,CAACqE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE/E,IAAI,CAAC,CAAC;UAC5C;QACF;MACF,CAAC;MACDiE,WAAW,CAACkB,OAAO,GAAG/E,KAAK,IAAI;QAC7BH,OAAO,CAACG,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1C6D,WAAW,CAACmB,KAAK,CAAC,CAAC;MACrB,CAAC;IACH,CAAC,CAAC,CAEDjF,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC,CAAC;IAE/CI,WAAW,CAACuE,IAAI,IAAI,CAAC,GAAGA,IAAI,EAAE;MAAEC,IAAI,EAAEjB,OAAO;MAAEkB,IAAI,EAAE;IAAO,CAAC,CAAC,CAAC;IAC/D;EACF,CAAC;EAED,MAAMI,kBAAkB,GAAG1C,KAAK,IAAI;IAClC,IAAIA,KAAK,CAAC2C,GAAG,KAAK,OAAO,IAAI3C,KAAK,CAACC,MAAM,CAACG,KAAK,CAACqB,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC7DpB,YAAY,CAAC,CAAC;MACdc,iBAAiB,CAACnB,KAAK,CAACC,MAAM,CAACG,KAAK,CAAC;MACrCJ,KAAK,CAACC,MAAM,CAACG,KAAK,GAAG,EAAE;MACvBrC,iBAAiB,CAAC,EAAE,CAAC;MACrBM,QAAQ,CAAC,EAAE,CAAC;IACd;EACF,CAAC;EAED,oBACEzB,OAAA;IAAKgG,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBjG,OAAA,CAACP,QAAQ;MAACyG,MAAM,EAAElE,WAAY;MAACmE,QAAQ,EAAE3D;IAAgB;MAAA4D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5DvG,OAAA;MAAKgG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,gBAC7BjG,OAAA;QAAKgG,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BjG,OAAA;UAAQgG,SAAS,EAAC,YAAY;UAAAC,QAAA,gBAQtBjG,OAAA;YAAAiG,QAAA,EACTjF,QAAQ,CAACqE,GAAG,CAAC,CAACmB,GAAG,EAAEC,KAAK,kBACvBzG,OAAA;cAAiBmE,KAAK,EAAE;gBAAEuC,SAAS,EAAEF,GAAG,CAACd,IAAI,KAAK,MAAM,GAAG,OAAO,GAAG;cAAO,CAAG;cAAAO,QAAA,EAC9EO,GAAG,CAACd,IAAI,KAAK,MAAM,gBAClB1F,OAAA,CAACN,UAAU;gBACTiH,QAAQ,EAAC,OAAO;gBAChBC,IAAI,EAAC,MAAM;gBACXnB,IAAI,EAAEe,GAAG,CAACf;gBACV;cAAA;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD,CAAC,gBAEFvG,OAAA,CAACN,UAAU;gBACTiH,QAAQ,EAAC,MAAM;gBACfC,IAAI,EAAC,MAAM;gBACXC,KAAK,EAAC,MAAM;gBACZpB,IAAI,EAAEe,GAAG,CAACf;gBACV;cAAA;gBAAAW,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACD;YACF,GAhBSE,KAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAiBV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACCvG,OAAA;YAAKgG,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/B3E,kBAAkB,IAAIA,kBAAkB,CAAC+D,GAAG,CAAC,CAACtC,QAAQ,EAAE0D,KAAK,kBAC5DzG,OAAA;cACAmE,KAAK,EAAE;gBAAE2C,KAAK,EAAE,KAAK;gBAAEC,QAAQ,EAAE,MAAM;gBAAEC,UAAU,EAAE,MAAM;gBAAEC,WAAW,EAAE,MAAM;gBAAEC,YAAY,EAAE,MAAM;gBAAEC,MAAM,EAAE,gBAAgB;gBAAEC,OAAO,EAAE;cAAM,CAAE;cACnJC,OAAO,EAAEA,CAAA,KAAM;gBACbvE,qBAAqB,CAACC,QAAQ,CAAC;gBAC/BtB,QAAQ,CAACsB,QAAQ,CAAC;gBAClBxB,qBAAqB,CAAC,EAAE,CAAC;cAC3B,CAAE;cACF+F,YAAY,EAAEpD,WAAY,CAAC;cAAA;cAC3BqD,YAAY,EAAEjD,cAAe,CAAC;cAAA;cAAA2B,QAAA,EAE3BlD;YAAQ,GAVD0D,KAAK;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAWV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACNvG,OAAA;YAAKmE,KAAK,EAAE;cAAG2C,KAAK,EAAE,KAAK;cAAEC,QAAQ,EAAE,MAAM;cAAES,OAAO,EAAE,MAAM;cAAEC,cAAc,EAAE,QAAQ;cAAEC,UAAU,EAAE,QAAQ;cAAEC,GAAG,EAAE,MAAM;cAAGT,YAAY,EAAE;YAAM,CAAE;YAAAjB,QAAA,gBACpJjG,OAAA;cAAAiG,QAAA,eACEjG,OAAA;gBAAOgG,SAAS,EAAC,kBAAkB;gBAAAC,QAAA,gBACjCjG,OAAA;kBACE4G,IAAI,EAAC,MAAM;kBACXgB,QAAQ,EAAEzE,gBAAiB;kBAC3B0E,MAAM,EAAC,MAAM;kBACb1D,KAAK,EAAE;oBAAEqD,OAAO,EAAE;kBAAO;gBAAE;kBAAApB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5B,CAAC,eACFvG,OAAA;kBAAMgG,SAAS,EAAC,mBAAmB;kBAAAC,QAAA,gBACjCjG,OAAA,CAACJ,eAAe;oBAACkI,IAAI,EAAEjI;kBAAS;oBAAAuG,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAC,gBACrC;gBAAA;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACF;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACNvG,OAAA;cAAKmE,KAAK,EAAE;gBAAE2C,KAAK,EAAE,KAAK;gBAAEiB,QAAQ,EAAE;cAAQ,CAAE;cAAA9B,QAAA,eAC9CjG,OAAA,CAACL,KAAK;gBACJiH,IAAI,EAAC,MAAM;gBACXpD,KAAK,EAAEpC,WAAY;gBACnBwG,QAAQ,EAAErE,uBAAwB;gBAClCyE,WAAW,EAAC;cAA0B;gBAAA5B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvC;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EACLzE,IAAI,iBACC9B,OAAA;YAAKmE,KAAK,EAAE;cAAE4C,QAAQ,EAAE,MAAM;cAAEG,YAAY,EAAE;YAAM,CAAE;YAAAjB,QAAA,GAAC,iBACtC,EAACnE,IAAI,CAACmG,IAAI;UAAA;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CACN,eACHvG,OAAA;YAAKmE,KAAK,EAAE;cAAE2C,KAAK,EAAE,KAAK;cAAEiB,QAAQ,EAAE,OAAO;cAAEG,MAAM,EAAE;YAAS,CAAE;YAAAjC,QAAA,EAC/D/D,SAAS,gBACblC,OAAA,CAACF,OAAO;cACRqI,OAAO,EAAE,IAAK;cACdC,MAAM,EAAC,IAAI;cACXtB,KAAK,EAAC,IAAI;cACVuB,SAAS,EAAC,iBAAiB;cAC3BC,YAAY,EAAE,CAAC,CAAE;cACjBC,YAAY,EAAC,iBAAiB;cAC9BnE,KAAK,EAAC,MAAM;cACZoE,eAAe,EAAC;YAAM;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrB,CAAC,gBACKvG,OAAA,CAACL,KAAK;cAACiH,IAAI,EAAC,MAAM;cAACpD,KAAK,EAAEhC,KAAM;cAACiH,SAAS,EAAE3C,kBAAmB;cAAC8B,QAAQ,EAAGc,CAAC,IAAKjH,QAAQ,CAACiH,CAAC,CAACrF,MAAM,CAACG,KAAK,CAAE;cAACwE,WAAW,EAAC;YAAe;cAAA5B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAE3I,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACNvG,OAAA;QAAKgG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BjG,OAAA;UAAAiG,QAAA,EAAI;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACrBvG,OAAA;UAAAiG,QAAA,EACCrE,SAAS,iBACR5B,OAAA;YAAAiG,QAAA,gBACEjG,OAAA;cAAK2I,GAAG,EAAEjH,QAAS;cAACkH,GAAG,EAAC,sBAAsB;cAACC,OAAO,EAAGH,CAAC,IAAK;gBAC7DhI,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEa,QAAQ,CAAC;gBAChDG,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;cACvB;YAAE;cAAAuE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACLvG,OAAA;cAAKgG,SAAS,EAAC,UAAU;cAAAC,QAAA,EAAC;YAA2B;cAAAG,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxD;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC,eACNvG,OAAA;UAAAiG,QAAA,EACG/E,cAAc,CAACmE,GAAG,CAAC,CAACyD,MAAM,EAAErC,KAAK,kBAChCzG,OAAA;YAAAiG,QAAA,EAAkB6C;UAAM,GAAdrC,KAAK;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAe,CAC/B;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACxF,EAAA,CA/RQD,GAAG;AAAAiI,EAAA,GAAHjI,GAAG;AAiSZ,eAAeA,GAAG;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
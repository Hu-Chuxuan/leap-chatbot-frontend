{"ast":null,"code":"var _jsxFileName = \"/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n\n// function App() {\n//   // State to store the backend output\n//   const [backendOutput, setBackendOutput] = useState('');\n\n//   const handleButtonClick = () => {\n//     fetch('/run-backend')\n//       .then(response => response.json())\n//       .then(data => {\n//         // alert(data.message);  // alert the message for debugging\n//         setBackendOutput(data.output);  // Update the state with the backend output\n//       })\n//       .catch(error => console.error('Error:', error));\n//   };\n\n//   const handleClearOutput = () => {\n//     setBackendOutput('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <button onClick={handleButtonClick}>Display Queries</button>\n//         <button onClick={handleClearOutput}>Clear Output</button>\n//         {/* Display the backend output */}\n//         <pre>{backendOutput}</pre>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const handleSendMessage = message => {\n    fetch('/display_chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        input: message\n      })\n    }).then(response => response.json()).then(data => {\n      setMessages(prev => [...prev, {\n        text: data.output,\n        from: 'bot'\n      }]);\n    }).catch(error => console.error('Error:', error));\n  };\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      const newMessage = event.target.value;\n      setMessages(prev => [...prev, {\n        text: newMessage,\n        from: 'user'\n      }]);\n      handleSendMessage(newMessage);\n      event.target.value = ''; // Clear input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textAlign: msg.from === 'user' ? 'right' : 'left'\n          },\n          children: msg.text\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onKeyDown: handleMessageInput,\n        placeholder: \"Type a message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","handleSendMessage","message","fetch","method","headers","body","JSON","stringify","input","then","response","json","data","prev","text","output","from","catch","error","console","handleMessageInput","event","key","target","value","trim","newMessage","className","children","map","msg","index","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","onKeyDown","placeholder","_c","$RefreshReg$"],"sources":["/Users/chuxuanhu/Documents/Fall2023/CS598/legal-service/chat-tool/my-react-app/src/App.js"],"sourcesContent":["// import React, { useState } from 'react';\n\n// function App() {\n//   // State to store the backend output\n//   const [backendOutput, setBackendOutput] = useState('');\n\n//   const handleButtonClick = () => {\n//     fetch('/run-backend')\n//       .then(response => response.json())\n//       .then(data => {\n//         // alert(data.message);  // alert the message for debugging\n//         setBackendOutput(data.output);  // Update the state with the backend output\n//       })\n//       .catch(error => console.error('Error:', error));\n//   };\n\n//   const handleClearOutput = () => {\n//     setBackendOutput('');\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <button onClick={handleButtonClick}>Display Queries</button>\n//         <button onClick={handleClearOutput}>Clear Output</button>\n//         {/* Display the backend output */}\n//         <pre>{backendOutput}</pre>\n//       </header>\n//     </div>\n//   );\n// }\n\n// export default App;\n\nimport React, { useState } from 'react';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  const handleSendMessage = (message) => {\n    fetch('/display_chat', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ input: message })\n    })\n    .then(response => response.json())\n    .then(data => {\n      setMessages(prev => [...prev, { text: data.output, from: 'bot' }]);\n    })\n    .catch(error => console.error('Error:', error));\n  };\n\n  const handleMessageInput = event => {\n    if (event.key === 'Enter' && event.target.value.trim() !== '') {\n      const newMessage = event.target.value;\n      setMessages(prev => [...prev, { text: newMessage, from: 'user' }]);\n      handleSendMessage(newMessage);\n      event.target.value = '';  // Clear input after sending\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <ul>\n          {messages.map((msg, index) => (\n            <li key={index} style={{ textAlign: msg.from === 'user' ? 'right' : 'left' }}>\n              {msg.text}\n            </li>\n          ))}\n        </ul>\n        <input type=\"text\" onKeyDown={handleMessageInput} placeholder=\"Type a message...\" />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}